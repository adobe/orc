name: Build and Test
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build-and-test:
    runs-on: macos-latest
    steps:
      - name: üêç setup
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: ‚¨áÔ∏è sources
        id: download-sources
        uses: actions/checkout@v3
      - name: üèóÔ∏è project files
        id: setup-project-files
        continue-on-error: true
        run: |
          mkdir build
          cd build
          cmake -q -DORC_BUILD_EXAMPLES=0 -GXcode ..
      - name: üõ†Ô∏è orc debug
        id: build-orc-debug
        continue-on-error: true
        run: |
          xcodebuild -json -project ./build/orc.xcodeproj -scheme orc_orc -configuration Debug -hideShellScriptEnvironment
      - name: üõ†Ô∏è orc release
        id: build-orc-release
        continue-on-error: true
        run: |
          xcodebuild -json -project ./build/orc.xcodeproj -scheme orc_orc -configuration Release -hideShellScriptEnvironment
      - name: üõ†Ô∏è orc_test
        id: build-orc_test
        continue-on-error: true
        run: |
          xcodebuild -json -project ./build/orc.xcodeproj -scheme orc_test -configuration Release -hideShellScriptEnvironment
      - name: üèÉ orc_test
        id: run-orc_test
        continue-on-error: true
        run: |
          ./build/Release/orc_test ./test/battery --json_mode > test_out.json
          cat test_out.json
          python ${GITHUB_WORKSPACE}/.github/orc_test_to_github_actions.py run-orc_test test_out.json
      - name: üõ†Ô∏è orc_test w/ ASan
        id: build-orc_test-asan
        continue-on-error: true
        run: |
          xcodebuild -json -project ./build/orc.xcodeproj -scheme orc_test -configuration Release -enableAddressSanitizer YES -hideShellScriptEnvironment
      - name: üèÉ orc_test w/ ASan
        id: run-orc_test-asan
        continue-on-error: true
        run: |
          ./build/Release/orc_test ./test/battery --json_mode > test_out.json
          cat test_out.json
          python ${GITHUB_WORKSPACE}/.github/orc_test_to_github_actions.py run-orc_test-asan test_out.json
      - name: üõ†Ô∏è orc_test w/ TSan
        id: build-orc_test-tsan
        continue-on-error: true
        run: |
          xcodebuild -json -project ./build/orc.xcodeproj -scheme orc_test -configuration Release -enableThreadSanitizer YES -hideShellScriptEnvironment
      - name: üèÉ orc_test w/ TSan
        id: run-orc_test-tsan
        continue-on-error: true
        run: |
          ./build/Release/orc_test ./test/battery --json_mode > test_out.json
          cat test_out.json
          python ${GITHUB_WORKSPACE}/.github/orc_test_to_github_actions.py run-orc_test-tsan test_out.json
      - name: üõ†Ô∏è orc_test w/ UBSan
        id: build-orc_test-ubsan
        continue-on-error: true
        run: |
          xcodebuild -json -project ./build/orc.xcodeproj -scheme orc_test -configuration Release -enableUndefinedBehaviorSanitizer YES -hideShellScriptEnvironment
      - name: üèÉ orc_test w/ UBSan
        id: run-orc_test-ubsan
        continue-on-error: true
        run: |
          ./build/Release/orc_test ./test/battery --json_mode > test_out.json
          cat test_out.json
          python ${GITHUB_WORKSPACE}/.github/orc_test_to_github_actions.py run-orc_test-ubsan test_out.json
      - name: ‚úèÔ∏è github json
        uses: jsdaniell/create-json@1.1.2
        continue-on-error: true
        with:
          name: "github.json"
          json: ${{ toJSON(github) }}
      - name: ‚úèÔ∏è steps json
        uses: jsdaniell/create-json@1.1.2
        continue-on-error: true
        with:
          name: "steps.json"
          json: ${{ toJSON(steps) }}
      - name: ‚úçÔ∏è job summary
        continue-on-error: false
        run: |
          python ${GITHUB_WORKSPACE}/.github/generate_job_summary.py $GITHUB_STEP_SUMMARY github.json steps.json
