// Copyright 2021 Adobe
// All Rights Reserved.
//
// NOTICE: Adobe permits you to use, modify, and distribute this file in accordance with the terms
// of the Adobe license agreement accompanying it.

#pragma once

// stdc++
#include <cstdint>

/**************************************************************************************************/

namespace dw {

/**************************************************************************************************/

enum class form : std::uint16_t {
    addr = 0x01,
    block2 = 0x03,
    block4 = 0x04,
    data2 = 0x05,
    data4 = 0x06,
    data8 = 0x07,
    string = 0x08,
    block = 0x09,
    block1 = 0x0a,
    data1 = 0x0b,
    flag = 0x0c,
    sdata = 0x0d,
    strp = 0x0e,
    udata = 0x0f,
    ref_addr = 0x10,
    ref1 = 0x11,
    ref2 = 0x12,
    ref4 = 0x13,
    ref8 = 0x14,
    ref_udata = 0x15,
    indirect = 0x16,
    sec_offset = 0x17,
    exprloc = 0x18,
    flag_present = 0x19,
    strx = 0x1a,
    addrx = 0x1b,
    ref_sup4 = 0x1c,
    strp_sup = 0x1d,
    data16 = 0x1e,
    line_strp = 0x1f,
    ref_sig8 = 0x20,
    implicit_const = 0x21,
    loclistx = 0x22,
    rnglistx = 0x23,
    ref_sup8 = 0x24,
    strx1 = 0x25,
    strx2 = 0x26,
    strx3 = 0x27,
    strx4 = 0x28,
    addrx1 = 0x29,
    addrx2 = 0x2a,
    addrx3 = 0x2b,
    addrx4 = 0x2c,
    gnu_addr_index = 0x1f01,
    gnu_str_index = 0x1f02,
    gnu_ref_alt = 0x1f20,
    gnu_strp_alt = 0x1f21,
};

/**************************************************************************************************/

enum class at : std::uint16_t {
    none = 0x00,
    sibling = 0x01,
    location = 0x02,
    name = 0x03,
    ordering = 0x09,
    subscr_data = 0x0a,
    byte_size = 0x0b,
    bit_offset = 0x0c,
    bit_size = 0x0d,
    element_list = 0x0f,
    stmt_list = 0x10,
    low_pc = 0x11,
    high_pc = 0x12,
    language = 0x13,
    member = 0x14,
    discr = 0x15,
    discr_value = 0x16,
    visibility = 0x17,
    import = 0x18,
    string_length = 0x19,
    common_reference = 0x1a,
    comp_dir = 0x1b,
    const_value = 0x1c,
    containing_type = 0x1d,
    default_value = 0x1e,
    inline_ = 0x20,
    is_optional = 0x21,
    lower_bound = 0x22,
    producer = 0x25,
    prototyped = 0x27,
    return_addr = 0x2a,
    start_scope = 0x2c,
    bit_stride = 0x2e,
    stride_size = 0x2e,
    upper_bound = 0x2f,
    abstract_origin = 0x31,
    accessibility = 0x32,
    address_class = 0x33,
    artificial = 0x34,
    base_types = 0x35,
    calling_convention = 0x36,
    count = 0x37,
    data_member_location = 0x38,
    decl_column = 0x39,
    decl_file = 0x3a,
    decl_line = 0x3b,
    declaration = 0x3c,
    discr_list = 0x3d,
    encoding = 0x3e,
    external = 0x3f,
    frame_base = 0x40,
    friend_ = 0x41,
    identifier_case = 0x42,
    macro_info = 0x43,
    namelist_item = 0x44,
    priority = 0x45,
    segment = 0x46,
    specification = 0x47,
    static_link = 0x48,
    type = 0x49,
    use_location = 0x4a,
    variable_parameter = 0x4b,
    virtuality = 0x4c,
    vtable_elem_location = 0x4d,
    allocated = 0x4e,
    associated = 0x4f,
    data_location = 0x50,
    byte_stride = 0x51,
    stride = 0x51,
    entry_pc = 0x52,
    use_utf8 = 0x53,
    extension = 0x54,
    ranges = 0x55,
    trampoline = 0x56,
    call_column = 0x57,
    call_file = 0x58,
    call_line = 0x59,
    description = 0x5a,
    binary_scale = 0x5b,
    decimal_scale = 0x5c,
    small = 0x5d,
    decimal_sign = 0x5e,
    digit_count = 0x5f,
    picture_string = 0x60,
    mutable_ = 0x61,
    threads_scaled = 0x62,
    explicit_ = 0x63,
    object_pointer = 0x64,
    endianity = 0x65,
    elemental = 0x66,
    pure = 0x67,
    recursive = 0x68,
    signature = 0x69,
    main_subprogram = 0x6a,
    data_bit_offset = 0x6b,
    const_expr = 0x6c,
    enum_class = 0x6d,
    linkage_name = 0x6e,
    string_length_bit_size = 0x6f,
    string_length_byte_size = 0x70,
    rank = 0x71,
    str_offsets_base = 0x72,
    addr_base = 0x73,
    rnglists_base = 0x74,
    dwo_id = 0x75,
    dwo_name = 0x76,
    reference = 0x77,
    rvalue_reference = 0x78,
    macros = 0x79,
    call_all_calls = 0x7a,
    call_all_source_calls = 0x7b,
    call_all_tail_calls = 0x7c,
    call_return_pc = 0x7d,
    call_value = 0x7e,
    call_origin = 0x7f,
    call_parameter = 0x80,
    call_pc = 0x81,
    call_tail_call = 0x82,
    call_target = 0x83,
    call_target_clobbered = 0x84,
    call_data_location = 0x85,
    call_data_value = 0x86,
    noreturn = 0x87,
    alignment = 0x88,
    export_symbols = 0x89,
    deleted = 0x8a,
    defaulted = 0x8b,
    loclists_base = 0x8c,
    ghs_namespace_alias = 0x806,
    ghs_using_namespace = 0x807,
    ghs_using_declaration = 0x808,
    hp_block_index = 0x2000,
    lo_user = 0x2000,
    mips_fde = 0x2001,
    mips_loop_begin = 0x2002,
    mips_tail_loop_begin = 0x2003,
    mips_epilog_begin = 0x2004,
    mips_loop_unroll_factor = 0x2005,
    mips_software_pipeline_depth = 0x2006,
    mips_linkage_name = 0x2007,
    mips_stride = 0x2008,
    mips_abstract_name = 0x2009,
    mips_clone_origin = 0x200a,
    mips_has_inlines = 0x200b,
    mips_stride_byte = 0x200c,
    mips_stride_elem = 0x200d,
    mips_ptr_dopetype = 0x200e,
    mips_allocatable_dopetype = 0x200f,
    mips_assumed_shape_dopetype = 0x2010,
    mips_assumed_size = 0x2011,
    hp_unmodifiable = 0x2001,
    hp_prologue = 0x2005,
    hp_epilogue = 0x2008,
    hp_actuals_stmt_list = 0x2010,
    hp_proc_per_section = 0x2011,
    hp_raw_data_ptr = 0x2012,
    hp_pass_by_reference = 0x2013,
    hp_opt_level = 0x2014,
    hp_prof_version_id = 0x2015,
    hp_opt_flags = 0x2016,
    hp_cold_region_low_pc = 0x2017,
    hp_cold_region_high_pc = 0x2018,
    hp_all_variables_modifiable = 0x2019,
    hp_linkage_name = 0x201a,
    hp_prof_flags = 0x201b,
    hp_unit_name = 0x201f,
    hp_unit_size = 0x2020,
    hp_widened_byte_size = 0x2021,
    hp_definition_points = 0x2022,
    hp_default_location = 0x2023,
    hp_is_result_param = 0x2029,
    cpq_discontig_ranges = 0x2001,
    cpq_semantic_events = 0x2002,
    cpq_split_lifetimes_var = 0x2003,
    cpq_split_lifetimes_rtn = 0x2004,
    cpq_prologue_length = 0x2005,
    ghs_mangled = 0x2007,
    ghs_rsm = 0x2083,
    ghs_frsm = 0x2085,
    ghs_frames = 0x2086,
    ghs_rso = 0x2087,
    ghs_subcpu = 0x2092,
    ghs_lbrace_line = 0x2093,
    intel_other_endian = 0x2026,
    sf_names = 0x2101,
    src_info = 0x2102,
    mac_info = 0x2103,
    src_coords = 0x2104,
    body_begin = 0x2105,
    body_end = 0x2106,
    gnu_vector = 0x2107,
    gnu_guarded_by = 0x2108,
    gnu_pt_guarded_by = 0x2109,
    gnu_guarded = 0x210a,
    gnu_pt_guarded = 0x210b,
    gnu_locks_excluded = 0x210c,
    gnu_exclusive_locks_required = 0x210d,
    gnu_shared_locks_required = 0x210e,
    gnu_odr_signature = 0x210f,
    gnu_template_name = 0x2110,
    gnu_call_site_value = 0x2111,
    gnu_call_site_data_value = 0x2112,
    gnu_call_site_target = 0x2113,
    gnu_call_site_target_clobbered = 0x2114,
    gnu_tail_call = 0x2115,
    gnu_all_tail_call_sites = 0x2116,
    gnu_all_call_sites = 0x2117,
    gnu_all_source_call_sites = 0x2118,
    gnu_macros = 0x2119,
    gnu_deleted = 0x211a,
    gnu_dwo_name = 0x2130,
    gnu_dwo_id = 0x2131,
    gnu_ranges_base = 0x2132,
    gnu_addr_base = 0x2133,
    gnu_pubnames = 0x2134,
    gnu_pubtypes = 0x2135,
    gnu_discriminator = 0x2136,
    gnu_locviews = 0x2137,
    gnu_entry_view = 0x2138,
    gnu_bias = 0x2305,
    sun_template = 0x2201,
    vms_rtnbeg_pd_address = 0x2201,
    sun_alignment = 0x2202,
    sun_vtable = 0x2203,
    sun_count_guarantee = 0x2204,
    sun_command_line = 0x2205,
    sun_vbase = 0x2206,
    sun_compile_options = 0x2207,
    sun_language = 0x2208,
    sun_browser_file = 0x2209,
    sun_vtable_abi = 0x2210,
    sun_func_offsets = 0x2211,
    sun_cf_kind = 0x2212,
    sun_vtable_index = 0x2213,
    sun_omp_tpriv_addr = 0x2214,
    sun_omp_child_func = 0x2215,
    sun_func_offset = 0x2216,
    sun_memop_type_ref = 0x2217,
    sun_profile_id = 0x2218,
    sun_memop_signature = 0x2219,
    sun_obj_dir = 0x2220,
    sun_obj_file = 0x2221,
    sun_original_name = 0x2222,
    sun_hwcprof_signature = 0x2223,
    sun_amd64_parmdump = 0x2224,
    sun_part_link_name = 0x2225,
    sun_link_name = 0x2226,
    sun_pass_with_const = 0x2227,
    sun_return_with_const = 0x2228,
    sun_import_by_name = 0x2229,
    sun_f90_pointer = 0x222a,
    sun_pass_by_ref = 0x222b,
    sun_f90_allocatable = 0x222c,
    sun_f90_assumed_shape_array = 0x222d,
    sun_c_vla = 0x222e,
    sun_return_value_ptr = 0x2230,
    sun_dtor_start = 0x2231,
    sun_dtor_length = 0x2232,
    sun_dtor_state_initial = 0x2233,
    sun_dtor_state_final = 0x2234,
    sun_dtor_state_deltas = 0x2235,
    sun_import_by_lname = 0x2236,
    sun_f90_use_only = 0x2237,
    sun_namelist_spec = 0x2238,
    sun_is_omp_child_func = 0x2239,
    sun_fortran_main_alias = 0x223a,
    sun_fortran_based = 0x223b,
    altium_loclist = 0x2300,
    use_gnat_descriptive_type = 0x2301,
    gnat_descriptive_type = 0x2302,
    gnu_numerator = 0x2303,
    gnu_denominator = 0x2304,
    go_kind = 0x2900,
    go_key = 0x2901,
    go_elem = 0x2902,
    go_embedded_field = 0x2903,
    go_runtime_type = 0x2904,
    upc_threads_scaled = 0x3210,
    ibm_wsa_addr = 0x393e,
    ibm_home_location = 0x393f,
    ibm_alt_srcview = 0x3940,
    pgi_lbase = 0x3a00,
    pgi_soffset = 0x3a01,
    pgi_lstride = 0x3a02,
    borland_property_read = 0x3b11,
    borland_property_write = 0x3b12,
    borland_property_implements = 0x3b13,
    borland_property_index = 0x3b14,
    borland_property_default = 0x3b15,
    borland_delphi_unit = 0x3b20,
    borland_delphi_class = 0x3b21,
    borland_delphi_record = 0x3b22,
    borland_delphi_metaclass = 0x3b23,
    borland_delphi_constructor = 0x3b24,
    borland_delphi_destructor = 0x3b25,
    borland_delphi_anonymous_method = 0x3b26,
    borland_delphi_interface = 0x3b27,
    borland_delphi_abi = 0x3b28,
    borland_delphi_frameptr = 0x3b30,
    borland_closure = 0x3b31,
    llvm_include_path = 0x3e00,
    llvm_config_macros = 0x3e01,
    llvm_sysroot = 0x3e02,
    llvm_tag_offset = 0x3e03,
    llvm_apinotes = 0x3e03,
    apple_optimized = 0x3fe1,
    apple_flags = 0x3fe2,
    apple_isa = 0x3fe3,
    apple_block = 0x3fe4,
    apple_major_runtime_vers = 0x3fe5,
    apple_runtime_class = 0x3fe6,
    apple_omit_frame_ptr = 0x3fe7,
    apple_property_name = 0x3fe8,
    apple_property_getter = 0x3fe9,
    apple_property_setter = 0x3fea,
    apple_property_attribute = 0x3feb,
    apple_objc_complete_type = 0x3fec,
    apple_property = 0x3fed,
    apple_objc_direct = 0x3fee,
    apple_sdk = 0x3fef,
    hi_user = 0x3fff,

    orc_tag = 0x4000,
};

/**************************************************************************************************/

const char* to_string(at attr);

/**************************************************************************************************/

enum class tag : std::uint16_t {
    none = 0x0,
    array_type = 0x01,
    class_type = 0x02,
    entry_point = 0x03,
    enumeration_type = 0x04,
    formal_parameter = 0x05,
    imported_declaration = 0x08,
    label = 0x0a,
    lexical_block = 0x0b,
    member = 0x0d,
    pointer_type = 0x0f,
    reference_type = 0x10,
    compile_unit = 0x11,
    string_type = 0x12,
    structure_type = 0x13,
    subroutine_type = 0x15,
    typedef_ = 0x16,
    union_type = 0x17,
    unspecified_parameters = 0x18,
    variant = 0x19,
    common_block = 0x1a,
    common_inclusion = 0x1b,
    inheritance = 0x1c,
    inlined_subroutine = 0x1d,
    module = 0x1e,
    ptr_to_member_type = 0x1f,
    set_type = 0x20,
    subrange_type = 0x21,
    with_stmt = 0x22,
    access_declaration = 0x23,
    base_type = 0x24,
    catch_block = 0x25,
    const_type = 0x26,
    constant = 0x27,
    enumerator = 0x28,
    file_type = 0x29,
    friend_ = 0x2a,
    namelist = 0x2b,
    namelist_item = 0x2c,
    namelist_items = 0x2c,
    packed_type = 0x2d,
    subprogram = 0x2e,
    template_type_parameter = 0x2f,
    template_type_param = 0x2f,
    template_value_parameter = 0x30,
    template_value_param = 0x30,
    thrown_type = 0x31,
    try_block = 0x32,
    variant_part = 0x33,
    variable = 0x34,
    volatile_type = 0x35,
    dwarf_procedure = 0x36,
    restrict_type = 0x37,
    interface_type = 0x38,
    namespace_ = 0x39,
    imported_module = 0x3a,
    unspecified_type = 0x3b,
    partial_unit = 0x3c,
    imported_unit = 0x3d,
    mutable_type = 0x3e,
    condition = 0x3f,
    shared_type = 0x40,
    type_unit = 0x41,
    rvalue_reference_type = 0x42,
    template_alias = 0x43,
    coarray_type = 0x44,
    generic_subrange = 0x45,
    dynamic_type = 0x46,
    atomic_type = 0x47,
    call_site = 0x48,
    call_site_parameter = 0x49,
    skeleton_unit = 0x4a,
    immutable_type = 0x4b,
    lo_user = 0x4080,
    mips_loop = 0x4081,
    hp_array_descriptor = 0x4090,
    format_label = 0x4101,
    function_template = 0x4102,
    class_template = 0x4103,
    gnu_bincl = 0x4104,
    gnu_eincl = 0x4105,
    gnu_template_template_parameter = 0x4106,
    gnu_template_template_param = 0x4106,
    gnu_template_parameter_pack = 0x4107,
    gnu_formal_parameter_pack = 0x4108,
    gnu_call_site = 0x4109,
    gnu_call_site_parameter = 0x410a,
    altium_circ_type = 0x5101,
    altium_mwa_circ_type = 0x5102,
    altium_rev_carry_type = 0x5103,
    altium_rom = 0x5111,
    upc_shared_type = 0x8765,
    upc_strict_type = 0x8766,
    upc_relaxed_type = 0x8767,
    apple_property = 0x4200,
    sun_function_template = 0x4201,
    sun_class_template = 0x4202,
    sun_struct_template = 0x4203,
    sun_union_template = 0x4204,
    sun_indirect_inheritance = 0x4205,
    sun_codeflags = 0x4206,
    sun_memop_info = 0x4207,
    sun_omp_child_func = 0x4208,
    sun_rtti_descriptor = 0x4209,
    sun_dtor_info = 0x420a,
    sun_dtor = 0x420b,
    sun_f90_interface = 0x420c,
    sun_fortran_vax_structure = 0x420d,
    sun_hi = 0x42ff,
    ghs_namespace = 0x8004,
    ghs_using_namespace = 0x8005,
    ghs_using_declaration = 0x8006,
    ghs_template_templ_param = 0x8007,
    pgi_kanji_type = 0xa000,
    pgi_interface_block = 0xa020,
    borland_property = 0xb000,
    borland_delphi_string = 0xb001,
    borland_delphi_dynamic_array = 0xb002,
    borland_delphi_set = 0xb003,
    borland_delphi_variant = 0xb004,
    hi_user = 0xffff,
};

/**************************************************************************************************/

const char* to_string(tag t);

bool is_type(tag t);

/**************************************************************************************************/

enum class op : std::uint8_t {
    addr = 0x03,
    deref = 0x06,
    const1u = 0x08,
    const1s = 0x09,
    const2u = 0x0a,
    const2s = 0x0b,
    const4u = 0x0c,
    const4s = 0x0d,
    const8u = 0x0e,
    const8s = 0x0f,
    constu = 0x10,
    consts = 0x11,
    dup = 0x12,
    drop = 0x13,
    over = 0x14,
    pick = 0x15,
    swap = 0x16,
    rot = 0x17,
    xderef = 0x18,
    abs = 0x19,
    and_ = 0x1a,
    div = 0x1b,
    minus = 0x1c,
    mod = 0x1d,
    mul = 0x1e,
    neg = 0x1f,
    not_ = 0x20,
    or_ = 0x21,
    plus = 0x22,
    plus_uconst = 0x23,
    shl = 0x24,
    shr = 0x25,
    shra = 0x26,
    xor_ = 0x27,
    bra = 0x28,
    eq = 0x29,
    ge = 0x2a,
    gt = 0x2b,
    le = 0x2c,
    lt = 0x2d,
    ne = 0x2e,
    skip = 0x2f,
    lit0 = 0x30,
    lit1 = 0x31,
    lit2 = 0x32,
    lit3 = 0x33,
    lit4 = 0x34,
    lit5 = 0x35,
    lit6 = 0x36,
    lit7 = 0x37,
    lit8 = 0x38,
    lit9 = 0x39,
    lit10 = 0x3a,
    lit11 = 0x3b,
    lit12 = 0x3c,
    lit13 = 0x3d,
    lit14 = 0x3e,
    lit15 = 0x3f,
    lit16 = 0x40,
    lit17 = 0x41,
    lit18 = 0x42,
    lit19 = 0x43,
    lit20 = 0x44,
    lit21 = 0x45,
    lit22 = 0x46,
    lit23 = 0x47,
    lit24 = 0x48,
    lit25 = 0x49,
    lit26 = 0x4a,
    lit27 = 0x4b,
    lit28 = 0x4c,
    lit29 = 0x4d,
    lit30 = 0x4e,
    lit31 = 0x4f,
    reg0 = 0x50,
    reg1 = 0x51,
    reg2 = 0x52,
    reg3 = 0x53,
    reg4 = 0x54,
    reg5 = 0x55,
    reg6 = 0x56,
    reg7 = 0x57,
    reg8 = 0x58,
    reg9 = 0x59,
    reg10 = 0x5a,
    reg11 = 0x5b,
    reg12 = 0x5c,
    reg13 = 0x5d,
    reg14 = 0x5e,
    reg15 = 0x5f,
    reg16 = 0x60,
    reg17 = 0x61,
    reg18 = 0x62,
    reg19 = 0x63,
    reg20 = 0x64,
    reg21 = 0x65,
    reg22 = 0x66,
    reg23 = 0x67,
    reg24 = 0x68,
    reg25 = 0x69,
    reg26 = 0x6a,
    reg27 = 0x6b,
    reg28 = 0x6c,
    reg29 = 0x6d,
    reg30 = 0x6e,
    reg31 = 0x6f,
    breg0 = 0x70,
    breg1 = 0x71,
    breg2 = 0x72,
    breg3 = 0x73,
    breg4 = 0x74,
    breg5 = 0x75,
    breg6 = 0x76,
    breg7 = 0x77,
    breg8 = 0x78,
    breg9 = 0x79,
    breg10 = 0x7a,
    breg11 = 0x7b,
    breg12 = 0x7c,
    breg13 = 0x7d,
    breg14 = 0x7e,
    breg15 = 0x7f,
    breg16 = 0x80,
    breg17 = 0x81,
    breg18 = 0x82,
    breg19 = 0x83,
    breg20 = 0x84,
    breg21 = 0x85,
    breg22 = 0x86,
    breg23 = 0x87,
    breg24 = 0x88,
    breg25 = 0x89,
    breg26 = 0x8a,
    breg27 = 0x8b,
    breg28 = 0x8c,
    breg29 = 0x8d,
    breg30 = 0x8e,
    breg31 = 0x8f,
    regx = 0x90,
    fbreg = 0x91,
    bregx = 0x92,
    piece = 0x93,
    deref_size = 0x94,
    xderef_size = 0x95,
    nop = 0x96,
    push_object_address = 0x97,
    call2 = 0x98,
    call4 = 0x99,
    call_ref = 0x9a,
    form_tls_address = 0x9b,
    call_frame_cfa = 0x9c,
    bit_piece = 0x9d,
    implicit_value = 0x9e,
    stack_value = 0x9f,
    implicit_pointer = 0xa0,
    addrx = 0xa1,
    constx = 0xa2,
    entry_value = 0xa3,
    const_type = 0xa4,
    regval_type = 0xa5,
    deref_type = 0xa6,
    xderef_type = 0xa7,
    convert = 0xa8,
    reinterpret = 0xa9,
    gnu_push_tls_address = 0xe0,
    wasm_location = 0xed,
    wasm_location_int = 0xee,
    lo_user = 0xe0,
    gnu_uninit = 0xf0,
    gnu_encoded_addr = 0xf1,
    gnu_implicit_pointer = 0xf2,
    gnu_entry_value = 0xf3,
    gnu_const_type = 0xf4,
    gnu_regval_type = 0xf5,
    gnu_deref_type = 0xf6,
    gnu_convert = 0xf7,
    gnu_reinterpret = 0xf9,
    gnu_parameter_ref = 0xfa,
    gnu_addr_index = 0xfb,
    gnu_const_index = 0xfc,
    gnu_variable_value = 0xfd,
    hp_unknown = 0xe0,
    hp_is_value = 0xe1,
    hp_fltconst4 = 0xe2,
    hp_fltconst8 = 0xe3,
    hp_mod_range = 0xe4,
    hp_unmod_range = 0xe5,
    hp_tls = 0xe6,
    intel_bit_piece = 0xe8,
    apple_uninit = 0xf0,
    pgi_omp_thread_num = 0xf8,
    hi_user = 0xff,
};

/**************************************************************************************************/

} // namespace dw

/**************************************************************************************************/
